version: '3.9'
services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pathfinder
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:7-alpine
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 3s
      retries: 20

  minio:
    image: minio/minio:RELEASE.2024-07-29T22-14-52Z
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - miniodata:/data

  mailhog:
    image: mailhog/mailhog:v1.0.1
    ports:
      - '1025:1025' # SMTP
      - '8025:8025' # UI

  jaeger:
    image: jaegertracing/all-in-one:1.57
    ports:
      - '16686:16686' # UI
      - '4317:4317'   # OTLP gRPC

  prometheus:
    image: prom/prometheus:v2.53.1
    volumes:
      - ./ops/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana:11.1.3
    ports:
      - '3001:3000'
    depends_on:
      - prometheus

  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/pathfinder
      REDIS_URL: redis://redis:6379
      S3_ENDPOINT: http://minio:9000
      S3_BUCKET: pathfinder
      S3_ACCESS_KEY_ID: minioadmin
      S3_SECRET_ACCESS_KEY: minioadmin
      EMAIL_FROM: no-reply@manparth.com
      RAZORPAY_KEY_ID: ${RAZORPAY_KEY_ID:-}
      RAZORPAY_KEY_SECRET: ${RAZORPAY_KEY_SECRET:-}
      JWT_ACCESS_SECRET: change_me_access
      JWT_REFRESH_SECRET: change_me_refresh
      FRONTEND_ORIGIN: http://localhost:5173
      APP_BASE_URL: http://localhost:3000
      WEB_BASE_URL: http://localhost:5173
    ports:
      - '3000:3000'
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "pnpm i && pnpm prisma migrate deploy && node apps/api/dist/main.js"

  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    environment:
      VITE_API_URL: http://localhost:3000
    ports:
      - '5173:5173'
    depends_on:
      - api

volumes:
  pgdata: {}
  redisdata: {}
  miniodata: {}